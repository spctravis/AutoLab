$labName = 'Test5'
$password = 'somepass'
#create an empty lab template and define where the lab XML files and the VMs will be stored
New-LabDefinition -Name $labName -DefaultVirtualizationEngine HyperV

#make the network definition
Add-LabVirtualNetworkDefinition -Name $labName -AddressSpace 192.168.71.0/24

#and the domain definition with the domain admin account
Add-LabDomainDefinition -Name test2.net -AdminUser Badger -AdminPassword $password
Add-LabDomainDefinition -Name child1.test2.net -AdminUser Badger -AdminPassword $password

#these images are used to install the machines
Add-LabIsoImageDefinition -Name 'Windows Server 2016 Standard Evaluation (Desktop Experience)' -Path C:\LabSources\ISOs\Windows_Server_2016_Datacenter_EVAL_en-us_14393_refresh.ISO
Add-LabIsoImageDefinition -Name 'Windows Server 2012 R2 Standard Evaluation (Server with a GUI)' -Path C:\LabSources\ISOs\9600.17050.WINBLUE_REFRESH.140317-1640_X64FRE_SERVER_EVAL_EN-US-IR3_SSS_X64FREE_EN-US_DV9.ISO
Add-LabIsoImageDefinition -Name 'Windows 10 Enterprise' -Path C:\LabSources\ISOs\en_windows_10_enterprise_x64_dvd_6851151.iso

Set-LabInstallationCredential -Username Badger -Password $password

#defining default parameter values, as these ones are the same for all the machines
$PSDefaultParameterValues = @{
    'Add-LabMachineDefinition:Network' = $labName
    'Add-LabMachineDefinition:ToolsPath'= "$labSources\Tools"
    'Add-LabMachineDefinition:IsDomainJoined'= $true
    'Add-LabMachineDefinition:DnsServer1'= '192.168.71.10'
    'Add-LabMachineDefinition:DnsServer2'= '192.168.71.11'
    'Add-LabMachineDefinition:OperatingSystem'= 'Windows Server 2016 Standard Evaluation (Desktop Experience)'
    'Add-LabMachineDefinition:DomainName'= 'child1.test2.net'
}

#the first machine is the root domain controller, DDL and DFL is defined manually
$role = Get-LabMachineRoleDefinition -Role RootDC @{ DomainFunctionalLevel = 'Win2016'; ForestFunctionalLevel = 'Win2016' }
#The PostInstallationActivity is just creating some users
$postInstallActivity = Get-LabPostInstallationActivity -ScriptFileName PrepareRootDomain.ps1 -DependencyFolder $labSources\PostInstallationActivities\PrepareRootDomain
Add-LabMachineDefinition -Name T2DC1 -Memory 2GB -IpAddress 192.168.71.10 -DomainName test2.net -Roles $role -PostInstallationActivity $postInstallActivity

#this is the first domain controller of the child domain 'child1' defined above
#The PostInstallationActivity is filling the domain with some life. 
#At the end about 6000 users are available with OU and manager hierarchy as well as a bunch of groups
$role = Get-LabMachineRoleDefinition -Role FirstChildDC -Properties @{ ParentDomain = 'test2.net'; NewDomain = 'child1'; DomainFunctionalLevel = 'Win2012R2' }
$postInstallActivity = Get-LabPostInstallationActivity -ScriptFileName 'New-ADLabAccounts 2.0.ps1' -DependencyFolder $labSources\PostInstallationActivities\PrepareFirstChildDomain
Add-LabMachineDefinition -Name T2DC2 -Memory 1GB -IpAddress 192.168.71.11 -Roles $role

#This will be the SQL server with the usual demo databases
Add-LabMachineDefinition -Name Client1 -Memory 2GB -Network $labName -IpAddress 192.168.71.14 `
    -OperatingSystem 'Windows 10 Enterprise' 

Install-Lab

#Install software to all lab machines
$packs = @()
$packs += Get-LabSoftwarePackage -Path C:\LabSources\SoftwarePackages\winlogbeat-7.0.1-windows-x86_64\fields.yml
$packs += Get-LabSoftwarePackage -Path C:\LabSources\SoftwarePackages\winlogbeat-7.0.1-windows-x86_64\winlogbeat.yml
$packs += Get-LabSoftwarePackage -Path C:\LabSources\SoftwarePackages\winlogbeat-7.0.1-windows-x86_64\winlogbeat.exe
$packs += Get-LabSoftwarePackage -Path C:\LabSources\SoftwarePackages\winlogbeat-7.0.1-windows-x86_64\install-service-winlogbeat.ps1 -CommandLine 'powershell.exe .\install-service-winlogbeat.ps1 -noprofile'
#$packs += Get-LabSoftwarePackage -Path $labSources\SoftwarePackages\ClassicShell.exe -CommandLine '/quiet ADDLOCAL=ClassicStartMenu'
#$packs += Get-LabSoftwarePackage -Path $labSources\SoftwarePackages\Notepad++.exe -CommandLine /S
#$packs += Get-LabSoftwarePackage -Path $labSources\SoftwarePackages\winrar.exe -CommandLine /S

Install-LabSoftwarePackages -Machine (Get-LabVM -All) -SoftwarePackage $packs

#Install Reflector to the first VisualStudio2015 machines
#Install-LabSoftwarePackage -Path $labSources\SoftwarePackages\ReflectorInstaller.exe -CommandLine '/qn /IAgreeToTheEula' -ComputerName (Get-LabVM -Role VisualStudio2015)[0].Name

Show-LabDeploymentSummary -Detailed
